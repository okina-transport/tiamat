//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.05 at 07:41:01 PM CET 
//


package no.rutebanken.tiamat.model;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;


/**
 * Type for a CONNECTION link restricts id.
 * 
 * <p>Java class for Connection_VersionStructure complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Connection_VersionStructure">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.netex.org.uk/netex}Transfer_VersionStructure">
 *       &lt;sequence>
 *         &lt;group ref="{http://www.netex.org.uk/netex}ConnectionGroup"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Connection_VersionStructure", propOrder = {
    "externalConnectionLinkRef",
    "from",
    "to",
    "transferOnly"
})
@XmlSeeAlso({
    Connection.class
})
public class Connection_VersionStructure
    extends Transfer_VersionStructure
{

    @XmlElement(name = "ExternalConnectionLinkRef")
    protected ExternalObjectRefStructure externalConnectionLinkRef;
    @XmlElement(name = "From")
    protected ConnectionEndStructure from;
    @XmlElement(name = "To")
    protected ConnectionEndStructure to;
    @XmlElement(name = "TransferOnly")
    protected Boolean transferOnly;

    /**
     * Gets the value of the externalConnectionLinkRef property.
     * 
     * @return
     *     possible object is
     *     {@link ExternalObjectRefStructure }
     *     
     */
    public ExternalObjectRefStructure getExternalConnectionLinkRef() {
        return externalConnectionLinkRef;
    }

    /**
     * Sets the value of the externalConnectionLinkRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ExternalObjectRefStructure }
     *     
     */
    public void setExternalConnectionLinkRef(ExternalObjectRefStructure value) {
        this.externalConnectionLinkRef = value;
    }

    /**
     * Gets the value of the from property.
     * 
     * @return
     *     possible object is
     *     {@link ConnectionEndStructure }
     *     
     */
    public ConnectionEndStructure getFrom() {
        return from;
    }

    /**
     * Sets the value of the from property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConnectionEndStructure }
     *     
     */
    public void setFrom(ConnectionEndStructure value) {
        this.from = value;
    }

    /**
     * Gets the value of the to property.
     * 
     * @return
     *     possible object is
     *     {@link ConnectionEndStructure }
     *     
     */
    public ConnectionEndStructure getTo() {
        return to;
    }

    /**
     * Sets the value of the to property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConnectionEndStructure }
     *     
     */
    public void setTo(ConnectionEndStructure value) {
        this.to = value;
    }

    /**
     * Gets the value of the transferOnly property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isTransferOnly() {
        return transferOnly;
    }

    /**
     * Sets the value of the transferOnly property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setTransferOnly(Boolean value) {
        this.transferOnly = value;
    }

}
