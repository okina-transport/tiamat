//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.05 at 07:41:01 PM CET 
//


package org.rutebanken.tiamat.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for CheckProcessTypeEnumeration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="CheckProcessTypeEnumeration">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="none"/>
 *     &lt;enumeration value="unknown"/>
 *     &lt;enumeration value="boarding"/>
 *     &lt;enumeration value="alighting"/>
 *     &lt;enumeration value="ticketPurchase"/>
 *     &lt;enumeration value="ticketCollection"/>
 *     &lt;enumeration value="ticketValidation"/>
 *     &lt;enumeration value="baggageCheckIn"/>
 *     &lt;enumeration value="checkout"/>
 *     &lt;enumeration value="oversizeBaggageCheckIn"/>
 *     &lt;enumeration value="oversizeBaggageReclaim"/>
 *     &lt;enumeration value="baggageReclaim"/>
 *     &lt;enumeration value="leftLuggageDeposit"/>
 *     &lt;enumeration value="leftLuggageReclaim"/>
 *     &lt;enumeration value="firstclassCheckin"/>
 *     &lt;enumeration value="specialNeedsCheckin"/>
 *     &lt;enumeration value="baggageSecurityCheck"/>
 *     &lt;enumeration value="securityCheck"/>
 *     &lt;enumeration value="outgoingPassportControl"/>
 *     &lt;enumeration value="incomingPassportControl"/>
 *     &lt;enumeration value="fasttrackDepartures"/>
 *     &lt;enumeration value="fasttrackArrivals"/>
 *     &lt;enumeration value="incomingDutyFree"/>
 *     &lt;enumeration value="outgoingDutyFree"/>
 *     &lt;enumeration value="taxRefunds"/>
 *     &lt;enumeration value="outgoingCustoms"/>
 *     &lt;enumeration value="incomingCustoms"/>
 *     &lt;enumeration value="waitForLift"/>
 *     &lt;enumeration value="ingress"/>
 *     &lt;enumeration value="egress"/>
 *     &lt;enumeration value="queue"/>
 *     &lt;enumeration value="vehicleLoading"/>
 *     &lt;enumeration value="vehicleUnloading"/>
 *     &lt;enumeration value="other"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "CheckProcessTypeEnumeration")
public enum CheckProcessTypeEnumeration {

    NONE("none"),
    UNKNOWN("unknown"),
    BOARDING("boarding"),
    ALIGHTING("alighting"),
    TICKET_PURCHASE("ticketPurchase"),
    TICKET_COLLECTION("ticketCollection"),
    TICKET_VALIDATION("ticketValidation"),
    BAGGAGE_CHECK_IN("baggageCheckIn"),
    CHECKOUT("checkout"),
    OVERSIZE_BAGGAGE_CHECK_IN("oversizeBaggageCheckIn"),
    OVERSIZE_BAGGAGE_RECLAIM("oversizeBaggageReclaim"),
    BAGGAGE_RECLAIM("baggageReclaim"),
    LEFT_LUGGAGE_DEPOSIT("leftLuggageDeposit"),
    LEFT_LUGGAGE_RECLAIM("leftLuggageReclaim"),
    FIRSTCLASS_CHECKIN("firstclassCheckin"),
    SPECIAL_NEEDS_CHECKIN("specialNeedsCheckin"),
    BAGGAGE_SECURITY_CHECK("baggageSecurityCheck"),
    SECURITY_CHECK("securityCheck"),
    OUTGOING_PASSPORT_CONTROL("outgoingPassportControl"),
    INCOMING_PASSPORT_CONTROL("incomingPassportControl"),
    FASTTRACK_DEPARTURES("fasttrackDepartures"),
    FASTTRACK_ARRIVALS("fasttrackArrivals"),
    INCOMING_DUTY_FREE("incomingDutyFree"),
    OUTGOING_DUTY_FREE("outgoingDutyFree"),
    TAX_REFUNDS("taxRefunds"),
    OUTGOING_CUSTOMS("outgoingCustoms"),
    INCOMING_CUSTOMS("incomingCustoms"),
    WAIT_FOR_LIFT("waitForLift"),
    INGRESS("ingress"),
    EGRESS("egress"),
    QUEUE("queue"),
    VEHICLE_LOADING("vehicleLoading"),
    VEHICLE_UNLOADING("vehicleUnloading"),
    OTHER("other");
    private final String value;

    CheckProcessTypeEnumeration(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static CheckProcessTypeEnumeration fromValue(String v) {
        for (CheckProcessTypeEnumeration c: CheckProcessTypeEnumeration.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
