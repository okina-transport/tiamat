//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.05 at 07:41:01 PM CET 
//


package org.rutebanken.tiamat.model;

import com.vividsolutions.jts.geom.Coordinate;
import com.vividsolutions.jts.geom.GeometryFactory;
import com.vividsolutions.jts.geom.Point;
import com.vividsolutions.jts.geom.PrecisionModel;
import net.opengis.gml._3.DirectPositionType;
import org.hibernate.annotations.Type;

import javax.persistence.*;
import javax.xml.bind.annotation.*;
import javax.xml.bind.annotation.adapters.NormalizedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import java.math.BigDecimal;
import java.util.Objects;

@Entity
@Table(name = "location")
public class LocationStructure {

    private static final int SRID = 4326;

    @Transient
    protected BigDecimal altitude;

    @Transient
    protected DirectPositionType pos;

    @Transient
    protected BigDecimal precision;

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE)
    protected long id;

    @Transient
    protected String srsName;

    @XmlTransient
    private Point geometryPoint = null;

    /**
     * TODO: Do not require geometry factory here.
     * See also GeometryFactory
     */
    @XmlTransient
    private static GeometryFactory geometryFactory = new GeometryFactory(new PrecisionModel(), SRID);

    public LocationStructure(Point geometryPoint) {
        this.geometryPoint = geometryPoint;
    }

    public LocationStructure() {
    }

    public BigDecimal getLongitude() {
        if(geometryPoint != null) {
            return new BigDecimal(String.valueOf(geometryPoint.getX()));
        }
        return null;
    }

    /**
     * Sets the value of the longitude property.
     * TODO: Not use the geometry factory in this class.
     */
    public void setLongitude(BigDecimal longitude) {
        double latitude;
        if(geometryPoint != null) {
            latitude = geometryPoint.getY();
        } else {
            latitude = 0;
        }
        geometryPoint = geometryFactory.createPoint(new Coordinate(longitude.doubleValue(), latitude));
    }

    public BigDecimal getLatitude() {
        if (geometryPoint != null) {
            return new BigDecimal(String.valueOf(geometryPoint.getY()));
        }
        return null;
    }

    public void setLatitude(BigDecimal latitude) {
        double longitude;
        if(geometryPoint != null) {
            longitude = geometryPoint.getX();
        } else {
            longitude = 0;
        }
        geometryPoint = geometryFactory.createPoint(new Coordinate(longitude, latitude.doubleValue()));
    }

    public BigDecimal getAltitude() {
        return altitude;
    }


    public void setAltitude(BigDecimal value) {
        this.altitude = value;
    }

    public DirectPositionType getPos() {
        return pos;
    }

    public void setPos(DirectPositionType value) {
        this.pos = value;
    }

    public BigDecimal getPrecision() {
        return precision;
    }

    public void setPrecision(BigDecimal value) {
        this.precision = value;
    }

    public long getId() {
        return id;
    }

    public void setId(long value) {
        this.id = value;
    }

    public String getSrsName() {
        return srsName;
    }

    public void setSrsName(String value) {
        this.srsName = value;
    }

    public Point getGeometryPoint() {
        return geometryPoint;
    }

    public void setGeometryPoint(Point geometryPoint) {
        this.geometryPoint = geometryPoint;
    }

    @Override
    public boolean equals(Object object) {
        if (this == object) return true;
        if (object == null) return false;
        if(!(object instanceof LocationStructure)) return false;

        LocationStructure other = (LocationStructure) object;

        return Objects.equals(this.srsName, other.srsName)
                && geometryEquals(other);
    }

    private boolean geometryEquals(LocationStructure other) {
        if(this.geometryPoint == other.geometryPoint) return true;
        if(this.geometryPoint != null && other.geometryPoint == null) return false;
        return this.geometryPoint.equals(other.geometryPoint);
    }
}
