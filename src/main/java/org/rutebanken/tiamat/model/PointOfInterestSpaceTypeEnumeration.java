//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.05 at 07:41:01 PM CET 
//


package org.rutebanken.tiamat.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PointOfInterestSpaceTypeEnumeration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PointOfInterestSpaceTypeEnumeration">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="arena"/>
 *     &lt;enumeration value="archeryArena"/>
 *     &lt;enumeration value="athleteArea"/>
 *     &lt;enumeration value="auditorium"/>
 *     &lt;enumeration value="changingRoom"/>
 *     &lt;enumeration value="court"/>
 *     &lt;enumeration value="downhillSkiingCourse"/>
 *     &lt;enumeration value="freestyleSkiingCourse"/>
 *     &lt;enumeration value="skiboardingArea"/>
 *     &lt;enumeration value="gates"/>
 *     &lt;enumeration value="greenRoom"/>
 *     &lt;enumeration value="hospitalityZone"/>
 *     &lt;enumeration value="iceRink"/>
 *     &lt;enumeration value="orchestralPit"/>
 *     &lt;enumeration value="playingField"/>
 *     &lt;enumeration value="podium"/>
 *     &lt;enumeration value="pool"/>
 *     &lt;enumeration value="divingPool"/>
 *     &lt;enumeration value="pressArea"/>
 *     &lt;enumeration value="queuingAreaForEntrance"/>
 *     &lt;enumeration value="ridingArea"/>
 *     &lt;enumeration value="rowingArea"/>
 *     &lt;enumeration value="securityScreeningArea"/>
 *     &lt;enumeration value="sledRun"/>
 *     &lt;enumeration value="spectatorTerrace"/>
 *     &lt;enumeration value="spectatorSeating"/>
 *     &lt;enumeration value="spectatorStandingArea"/>
 *     &lt;enumeration value="sportsArea"/>
 *     &lt;enumeration value="stabling"/>
 *     &lt;enumeration value="stage"/>
 *     &lt;enumeration value="ring"/>
 *     &lt;enumeration value="ticketing"/>
 *     &lt;enumeration value="track"/>
 *     &lt;enumeration value="trackside"/>
 *     &lt;enumeration value="velodrome"/>
 *     &lt;enumeration value="warmUpArea"/>
 *     &lt;enumeration value="waterside"/>
 *     &lt;enumeration value="undefined"/>
 *     &lt;enumeration value="other"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "PointOfInterestSpaceTypeEnumeration")
public enum PointOfInterestSpaceTypeEnumeration {

    ARENA("arena"),
    ARCHERY_ARENA("archeryArena"),
    ATHLETE_AREA("athleteArea"),
    AUDITORIUM("auditorium"),
    CHANGING_ROOM("changingRoom"),
    COURT("court"),
    DOWNHILL_SKIING_COURSE("downhillSkiingCourse"),
    FREESTYLE_SKIING_COURSE("freestyleSkiingCourse"),
    SKIBOARDING_AREA("skiboardingArea"),
    GATES("gates"),
    GREEN_ROOM("greenRoom"),
    HOSPITALITY_ZONE("hospitalityZone"),
    ICE_RINK("iceRink"),
    ORCHESTRAL_PIT("orchestralPit"),
    PLAYING_FIELD("playingField"),
    PODIUM("podium"),
    POOL("pool"),
    DIVING_POOL("divingPool"),
    PRESS_AREA("pressArea"),
    QUEUING_AREA_FOR_ENTRANCE("queuingAreaForEntrance"),
    RIDING_AREA("ridingArea"),
    ROWING_AREA("rowingArea"),
    SECURITY_SCREENING_AREA("securityScreeningArea"),
    SLED_RUN("sledRun"),
    SPECTATOR_TERRACE("spectatorTerrace"),
    SPECTATOR_SEATING("spectatorSeating"),
    SPECTATOR_STANDING_AREA("spectatorStandingArea"),
    SPORTS_AREA("sportsArea"),
    STABLING("stabling"),
    STAGE("stage"),
    RING("ring"),
    TICKETING("ticketing"),
    TRACK("track"),
    TRACKSIDE("trackside"),
    VELODROME("velodrome"),
    WARM_UP_AREA("warmUpArea"),
    WATERSIDE("waterside"),
    UNDEFINED("undefined"),
    OTHER("other");
    private final String value;

    PointOfInterestSpaceTypeEnumeration(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PointOfInterestSpaceTypeEnumeration fromValue(String v) {
        for (PointOfInterestSpaceTypeEnumeration c: PointOfInterestSpaceTypeEnumeration.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
