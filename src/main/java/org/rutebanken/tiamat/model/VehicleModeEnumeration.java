//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.05 at 07:41:01 PM CET 
//


package org.rutebanken.tiamat.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for VehicleModeEnumeration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="VehicleModeEnumeration">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *     &lt;enumeration value="air"/>
 *     &lt;enumeration value="bus"/>
 *     &lt;enumeration value="coach"/>
 *     &lt;enumeration value="ferry"/>
 *     &lt;enumeration value="metro"/>
 *     &lt;enumeration value="rail"/>
 *     &lt;enumeration value="trolleyBus"/>
 *     &lt;enumeration value="tram"/>
 *     &lt;enumeration value="water"/>
 *     &lt;enumeration value="cableway"/>
 *     &lt;enumeration value="funicular"/>
 *     &lt;enumeration value="lift"/>
 *     &lt;enumeration value="other"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "VehicleModeEnumeration")
public enum VehicleModeEnumeration {

    AIR("air"),
    BUS("bus"),
    COACH("coach"),
    FERRY("ferry"),
    METRO("metro"),
    RAIL("rail"),
    TROLLEY_BUS("trolleyBus"),
    TRAM("tram"),
    WATER("water"),
    CABLEWAY("cableway"),
    FUNICULAR("funicular"),
    LIFT("lift"),
    OTHER("other");
    private final String value;

    VehicleModeEnumeration(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static VehicleModeEnumeration fromValue(String v) {
        for (VehicleModeEnumeration c: VehicleModeEnumeration.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
